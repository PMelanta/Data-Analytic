{"cells": [{"outputs": [], "execution_count": null, "source": ["# Linear regression is used to predict the value of an outcome variable Y \n", "# based on one or more input predictor variables X.\n", "# The aim is to establish a linear relationship (a mathematical formula) \n", "# between the predictor variable(s) and the response variable, \n", "# so that, we can use this formula to estimate the value of the response Y, \n", "# when only the predictors (Xs) values are known."], "cell_type": "code", "metadata": {"_uuid": "ca1f598a7bb16156e83167f8b8ff02497fdc0340", "_cell_guid": "9aaa471d-89dc-4493-89ab-4b7774b3e27e"}}, {"outputs": [], "execution_count": null, "source": ["# Loading ggplot\n", "library(ggplot2)"], "cell_type": "code", "metadata": {"_uuid": "771599585cef2ce8b9cd9fd45a03039b613e152a", "_cell_guid": "6c1a631f-6d8f-4598-a42b-94fa619e9ec3"}}, {"outputs": [], "execution_count": null, "source": ["# Importing the dataset\n", "trainingSet = read.csv('../input/train.csv')"], "cell_type": "code", "metadata": {"_uuid": "a809ae693ee5ba28da05754611f257770a8b2b89", "_cell_guid": "0f4fdc39-f30e-4e7c-a0f0-1ca0b93e35db"}}, {"outputs": [], "execution_count": null, "source": ["# Check for NA and missing values\n", "# is.na return a vector with value TT for missing values.\n", "numberOfNA = length(which(is.na(trainingSet)==T))\n", "if(numberOfNA > 0) {\n", "  cat('Number of missing values found: ', numberOfNA)\n", "  cat('\\nRemoving missing values...')\n", "  trainingSet = trainingSet[complete.cases(trainingSet), ]\n", "}"], "cell_type": "code", "metadata": {"_uuid": "9769018c92d2cdae89a2fb4c7e3f0923232bcd59", "_cell_guid": "a44e369e-0976-492d-b477-a7c77f4408d1"}}, {"outputs": [], "execution_count": null, "source": ["# Check for outliers\n", "# Divide the graph area in 2 columns\n", "par(mfrow = c(1, 2))\n", "# Boxplot for X\n", "boxplot(trainingSet$x, main='X', sub=paste('Outliers: ', boxplot.stats(trainingSet$x)$out))\n", "# Boxplot for Y\n", "boxplot(trainingSet$y, main='Y', sub=paste('Outliers: ', boxplot.stats(trainingSet$y)$out))"], "cell_type": "code", "metadata": {"_uuid": "acc690a676a646c15119edcc3b7cc39a46098151", "_cell_guid": "20d609c7-7e30-439b-ae1a-34cc13cc4da8"}}, {"outputs": [], "execution_count": null, "source": ["# Both boxplots shows no outliers and distribution is not skewed."], "cell_type": "code", "metadata": {"_uuid": "fd11e9f1cc2e903c42c9e0afe18c9b9c8a729db8", "_cell_guid": "71c1095d-f245-4011-925b-f850cc7ee079"}}, {"outputs": [], "execution_count": null, "source": ["# Finding correlation\n", "# Correlation is a statistical measure that suggests the level of linear dependence between two variables,\n", "# that occur in pair. \n", "# Its value is between -1 to +1\n", "# Above 0 is positive correlation i.e. X is directly proportional to Y.\n", "# Below 0 is negative correlation i.e. X is inversly proportional to Y.\n", "# Value 0 suggests weak relation.\n", "cor(trainingSet$x, trainingSet$y)"], "cell_type": "code", "metadata": {"_uuid": "6164c9f54d03fd266b466f7bcd5ebe2e67bf1456", "_cell_guid": "3064fca9-8d2c-4a8e-9c67-89f94f908e12"}}, {"outputs": [], "execution_count": null, "source": ["# 0.99 shows a very strong relation."], "cell_type": "code", "metadata": {"_uuid": "958fd5fac8077eff3b5113c29294e095d195aced", "_cell_guid": "5f4e6024-613f-4a9c-8014-5586df18f2d0"}}, {"outputs": [], "execution_count": null, "source": ["# Fitting Simple Linear regression\n", "# . is used to fit predictor using all independent variables\n", "regressor = lm(formula = y ~.,\n", "               data = trainingSet)"], "cell_type": "code", "metadata": {"_uuid": "6feef83fb4fc3fac27cec3581b733236f32198cb", "_cell_guid": "2543ad35-e426-4f0c-b823-9e23756c63af"}}, {"outputs": [], "execution_count": null, "source": ["summary(regressor)"], "cell_type": "code", "metadata": {"_uuid": "71b7d9f521b9b9893936580645ffa18e6ed2f923", "_cell_guid": "faf821b5-fc6d-41ca-9a2d-49abb41f2de2"}}, {"outputs": [], "execution_count": null, "source": ["# In Linear Regression, the Null Hypothesis is that the coefficients associated with the variables is equal to zero. \n", "# The alternate hypothesis is that the coefficients are not equal to zero \n", "# (i.e. there exists a relationship between the independent variable in question and the dependent variable).\n", "# P value has 3 stars which means x is of very high statistical significance.\n", "# P value is less than 0. Genraaly below 0.05 is considered good.\n", "# R-Squared tells us is the proportion of variation in the dependent (response) variable that has been explained by this model.\n", "# R square is 0.99 which shows very good variation between dependent variable(y) and independent variable(x)."], "cell_type": "code", "metadata": {"_uuid": "7d1ad60ce4a31de863f2a2c092ddcb475d8f705b", "_cell_guid": "a51989d6-23cc-4f0e-80d5-0ae6dd0d5442"}}, {"outputs": [], "execution_count": null, "source": ["# Visualizing the training set results\n", "ggplot() +\n", "  geom_point(aes(x = trainingSet$x, y = trainingSet$y),\n", "             colour = 'red') +\n", "  geom_line(aes(x = trainingSet$x, y = predict(regressor, newdata = trainingSet)),\n", "            colour = 'blue') +\n", "  ggtitle('X vs Y (Training set)') +\n", "  xlab('X') +\n", "  ylab('Y')"], "cell_type": "code", "metadata": {"_uuid": "30a6c4f82bd08563ee03ce985732300549f0ec70", "_cell_guid": "3b52c5e8-43ae-43f1-bb70-3a6ba39a0286"}}, {"outputs": [], "execution_count": null, "source": ["# Above plot shows there are no outliers.\n", "# It clearly shows there is a linear relationship between x and y which is continous in nature."], "cell_type": "code", "metadata": {"_uuid": "be82b53522e11f72757878c29165a9ea3f4e9489", "_cell_guid": "c387a04b-07af-4b92-919b-7738bde913ae"}}, {"outputs": [], "execution_count": null, "source": ["# Importing test data\n", "testSet = read.csv('../input/test.csv')\n", "# Predicting the test results\n", "y_pred = predict(regressor, newdata = testSet)"], "cell_type": "code", "metadata": {"_uuid": "0d1d7ad19918f78c04de409a05a270a5f55147de", "_cell_guid": "a7a9e0f4-c22d-4940-a959-2feaeff0f847"}}, {"outputs": [], "execution_count": null, "source": ["# Visualizing the test set results\n", "ggplot() +\n", "  geom_point(aes(x = testSet$x, y = testSet$y),\n", "             colour = 'red') +\n", "  geom_line(aes(x = trainingSet$x, y = predict(regressor, newdata = trainingSet)),\n", "            colour = 'blue') +\n", "  ggtitle('X vs Y (Test set)') +\n", "  xlab('X') +\n", "  ylab('Y')"], "cell_type": "code", "metadata": {"_uuid": "475759594031f85b1567ce1d486d6060d1de6939", "_cell_guid": "76cb3f37-f7be-4fa1-b0c3-9bb7f4e21b3d"}}, {"outputs": [], "execution_count": null, "source": ["# Plot shows model was a good fit."], "cell_type": "code", "metadata": {"_uuid": "8b8f30fc8b42f0ff4879d2a06b02f972f97b8962", "_cell_guid": "eb74655b-fe04-4f6c-b751-7804feff1efc"}}, {"outputs": [], "execution_count": null, "source": ["# Finding accuracy\n", "compare <- cbind (actual=testSet$x, y_pred)  # combine actual and predicted\n", "mean (apply(compare, 1, min)/apply(compare, 1, max))\n", "mean(0.9,0.9,0.9,0.9)"], "cell_type": "code", "metadata": {"_uuid": "085ce02a18787b1adb5ed3fae8826d9226d81b8e", "_cell_guid": "00b3083c-a220-4441-a64c-ddb0bc1e0387"}}, {"outputs": [], "execution_count": null, "source": ["# Check for residual mean and distribution\n", "plot(trainingSet$y, resid(regressor), \n", "     ylab=\"Residuals\", xlab=\"Price\", \n", "     main=\"Residual plot\") \n", "mean(regressor$residuals)"], "cell_type": "code", "metadata": {}}], "nbformat": 4, "metadata": {"kernelspec": {"name": "ir", "language": "R", "display_name": "R"}, "language_info": {"name": "R", "pygments_lexer": "r", "file_extension": ".r", "mimetype": "text/x-r-source", "version": "3.4.1", "codemirror_mode": "r"}}, "nbformat_minor": 1}